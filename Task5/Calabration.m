% Auto-generated by cameraCalibrator app on 20-May-2023
%-------------------------------------------------------


% Define images to process
imageFileNames = {'C:\Users\10037\Desktop\DIP\Task5\Board\c-0000.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0002.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0003.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0004.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0005.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0006.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0007.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0008.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0009.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0010.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0011.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0012.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0013.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0014.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0015.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0016.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0017.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0018.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0019.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0020.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0021.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0022.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0023.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0024.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0025.ppm',...
    'C:\Users\10037\Desktop\DIP\Task5\Board\c-0026.ppm',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames, 'HighDistortion', true);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 10;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
